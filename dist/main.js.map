{"version":3,"sources":["main.js","canvas/canvas.js","canvas/grid.js","canvas/index.js","controls/color.js","controls/index.js"],"names":["Object","defineProperty","exports","value","enumerable","get","_controls","startColorPicker","stopColorPicker","pathColorPicker","emptyColorPicker","obstacleColorPicker","_canvas","grid","canvas","require","init","console","log","context","document","getElementById","getContext","rect","parentNode","getBoundingClientRect","width","height","fillStyle","fillRect","createGrid","_ref","gridWidth","gridHeight","gridXPadding","gridYPadding","gridXCellSpace","gridYCellSpace","gridXCellCount","gridYCellCount","lineJoin","globalCompositeOperation","gridXCellSize","calculateCellSize","size","count","space","padding","gridYCellSize","drawGrid","ctx","_ref2","i","j","drawNeonRect","startX","calculateCellStart","index","startY","color","blur","_ref3","_ref4","drawRectangle","_ref5","border","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","stroke","_ref6","strokeColor","shadowColor","shadowBlur","strokeStyle","lineWidth","_grid","buildCreateColorPicker","_pickr","_interopRequireDefault","obj","__esModule","default","colorInputData","id","colorPicker","_createColorPicker","on","applyColor","defaultColor","Pickr","create","el","theme","swatches","components","preview","hue","interaction","rgba","hex","input","_color","startColor","stopColor","pathColor","emptyColor","obstacleColor","createColorPicker"],"mappings":"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","file":"main.js","sourcesContent":["import \"jquery\";\nimport \"bootstrap\";\nimport \"./controls\";\n\nimport {\n  startColorPicker,\n  stopColorPicker,\n  pathColorPicker,\n  emptyColorPicker,\n  obstacleColorPicker,\n} from \"./controls\";\n\nimport { grid, canvas } from \"./canvas\";\n\ngrid.init();\n\nconsole.log(canvas);\n\nexport {\n  grid,\n  canvas,\n  startColorPicker,\n  stopColorPicker,\n  pathColorPicker,\n  emptyColorPicker,\n  obstacleColorPicker,\n};\n","const canvas = document.getElementById(\"main-canvas\");\nconst context = canvas.getContext(\"2d\");\n\nvar rect = canvas.parentNode.getBoundingClientRect();\ncanvas.width = rect.width;\ncanvas.height = rect.height;\n\ncontext.fillStyle = \"#000\";\ncontext.fillRect(0, 0, canvas.width, canvas.height);\n\nexport { canvas, context };\n","const createGrid = function ({\n  context,\n  gridWidth,\n  gridHeight,\n  gridXPadding,\n  gridYPadding,\n  gridXCellSpace,\n  gridYCellSpace,\n  gridXCellCount,\n  gridYCellCount,\n}) {\n  context.lineJoin = \"round\";\n  context.globalCompositeOperation = \"lighter\";\n  const gridXCellSize = calculateCellSize({\n    size: gridWidth,\n    count: gridXCellCount,\n    space: gridXCellSpace,\n    padding: gridXPadding,\n  });\n  const gridYCellSize = calculateCellSize({\n    size: gridHeight,\n    count: gridYCellCount,\n    space: gridYCellSpace,\n    padding: gridYPadding,\n  });\n  const init = () => {\n    drawGrid({\n      context,\n      gridXPadding,\n      gridYPadding,\n      gridYCellSize,\n      gridXCellSize,\n      gridXCellCount,\n      gridYCellCount,\n      gridXCellSpace,\n      gridYCellSpace,\n    });\n  };\n  return {\n    init: init,\n    ctx: context,\n    gridWidth: gridWidth,\n    gridHeight: gridHeight,\n    gridXPadding: gridXPadding,\n    gridYPadding: gridYPadding,\n    gridXCellSize: gridXCellSize,\n    gridYCellSize: gridYCellSize,\n    gridXCellSpace: gridXCellSpace,\n    gridYCellSpace: gridYCellSpace,\n    gridXCellCount: gridXCellCount,\n    gridYCellCount: gridYCellCount,\n  };\n};\n\nconst drawGrid = function ({\n  context,\n  gridXPadding,\n  gridYPadding,\n  gridYCellSize,\n  gridXCellSize,\n  gridXCellCount,\n  gridYCellCount,\n  gridXCellSpace,\n  gridYCellSpace,\n}) {\n  for (var i = 0; i < gridXCellCount; i++) {\n    for (var j = 0; j < gridYCellCount; j++) {\n      drawNeonRect({\n        context,\n        startX: calculateCellStart({\n          padding: gridXPadding,\n          index: i,\n          space: gridXCellSpace,\n          size: gridXCellSize,\n        }),\n        startY: calculateCellStart({\n          padding: gridYPadding,\n          index: j,\n          space: gridYCellSpace,\n          size: gridYCellSize,\n        }),\n        width: gridXCellSize,\n        height: gridYCellSize,\n        color: [13, 213, 252],\n        blur: 10,\n      });\n    }\n  }\n};\n\nconst calculateCellSize = ({ padding, count, space, size }) =>\n  (size - 2 * padding - (count - 1) * space) / count;\n\nconst calculateCellStart = ({ padding, index, space, size }) =>\n  padding + index * (space + size);\n\nconst drawRectangle = function ({\n  context,\n  startX,\n  startY,\n  width,\n  height,\n  border,\n}) {\n  context.beginPath();\n  context.moveTo(startX + border, startY);\n  context.lineTo(startX + width - border, startY);\n  context.quadraticCurveTo(\n    startX + width - border,\n    startY,\n    startX + width,\n    startY + border\n  );\n  context.lineTo(startX + width, startY + height - border);\n  context.quadraticCurveTo(\n    startX + width,\n    startY + height - border,\n    startX + width - border,\n    startY + height\n  );\n  context.lineTo(startX + border, startY + height);\n  context.quadraticCurveTo(\n    startX + border,\n    startY + height,\n    startX,\n    startY + height - border\n  );\n  context.lineTo(startX, startY + border);\n  context.quadraticCurveTo(startX, startY + border, startX + border, startY);\n  context.closePath();\n  context.stroke();\n};\n\nconst drawNeonRect = function ({\n  context,\n  startX,\n  startY,\n  width,\n  height,\n  color,\n  blur,\n}) {\n  const border = 1.5;\n  const strokeColor =\n    \"rgba(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \", 1.0)\";\n  const shadowColor =\n    \"rgba(\" + color[0] + \",\" + color[1] + \",\" + color[2] + \", 0.2 )\";\n  context.shadowBlur = blur;\n  context.shadowColor = shadowColor;\n  context.strokeStyle = strokeColor;\n  context.lineWidth = blur * 0.75;\n  drawRectangle({ context, startX, startY, width, height, border });\n  context.strokeStyle = strokeColor;\n  context.lineWidth = blur * 0.65;\n  drawRectangle({ context, startX, startY, width, height, border });\n  context.strokeStyle = strokeColor;\n  context.lineWidth = blur * 0.45;\n  drawRectangle({ context, startX, startY, width, height, border });\n  context.strokeStyle = strokeColor;\n  context.lineWidth = blur * 0.25;\n  drawRectangle({ context, startX, startY, width, height, border });\n  context.strokeStyle = \"#fff\";\n  context.lineWidth = blur * 0.15;\n  drawRectangle({ context, startX, startY, width, height, border });\n  context.fillStyle = strokeColor;\n  context.fillRect(startX, startY, width, height);\n};\n\nexport { createGrid };\n","import { createGrid } from \"./grid\";\nimport { context, canvas } from \"./canvas\";\n\nconst grid = createGrid({\n  context: context,\n  gridWidth: canvas.width,\n  gridHeight: canvas.height,\n  gridXPadding: 30,\n  gridYPadding: 30,\n  gridXCellSpace: 12,\n  gridYCellSpace: 12,\n  gridXCellCount: 20,\n  gridYCellCount: 10,\n});\n\nexport { grid, canvas };\n","import Pickr from \"@simonwep/pickr\";\n\nfunction buildCreateColorPicker(colorInputData) {\n  return (id) => {\n    const colorPicker = _createColorPicker(\"#\" + id, colorInputData[id]);\n    colorPicker.on(\"change\", (color) => {\n      colorPicker.applyColor(false);\n      colorInputData[id] = color;\n    });\n  };\n}\n\nfunction _createColorPicker(id, defaultColor) {\n  const colorPicker = Pickr.create({\n    el: id,\n    theme: \"nano\",\n\n    default: defaultColor,\n\n    swatches: [\n      \"rgba(244, 67, 54, 1)\",\n      \"rgba(233, 30, 99, 1)\",\n      \"rgba(156, 39, 176, 1)\",\n      \"rgba(103, 58, 183, 1)\",\n      \"rgba(63, 81, 181, 1)\",\n      \"rgba(33, 150, 243, 1)\",\n      \"rgba(3, 169, 244, 1)\",\n      \"rgba(0, 188, 212, 1)\",\n      \"rgba(0, 150, 136, 1)\",\n      \"rgba(76, 175, 80, 1)\",\n      \"rgba(139, 195, 74, 1)\",\n      \"rgba(205, 220, 57, 1)\",\n      \"rgba(255, 235, 59, 1)\",\n      \"rgba(255, 193, 7, 1)\",\n    ],\n\n    components: {\n      preview: true,\n      hue: true,\n\n      interaction: {\n        rgba: true,\n        hex: true,\n        input: true,\n      },\n    },\n  });\n  return colorPicker;\n}\n\nexport { buildCreateColorPicker };\n","import { buildCreateColorPicker } from \"./color\";\n\nconst colorInputData = {\n  startColor: \"#EE964B\",\n  stopColor: \"#28AFB0\",\n  pathColor: \"#F4D35E\",\n  emptyColor: \"#DEFFF2\",\n  obstacleColor: \"#19647E\",\n};\n\nconst createColorPicker = buildCreateColorPicker(colorInputData);\n\nconst stopColorPicker = createColorPicker(\"stopColor\");\nconst pathColorPicker = createColorPicker(\"pathColor\");\nconst startColorPicker = createColorPicker(\"startColor\");\nconst emptyColorPicker = createColorPicker(\"emptyColor\");\nconst obstacleColorPicker = createColorPicker(\"obstacleColor\");\n\nexport {\n  colorInputData,\n  stopColorPicker,\n  pathColorPicker,\n  startColorPicker,\n  emptyColorPicker,\n  obstacleColorPicker,\n};\n"]}